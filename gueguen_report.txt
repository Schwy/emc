CRITICAL APPLICATION DEVELOPMEN PROJECT
EMC5
2015-2016
Antoine GUEGUEN

_______________________________________________
1. Description and explanation of esterel model

	1.1 Phases
		The behaviour of the elevator is separated in 5 phases as follows:
			phase 1: opening of the doors of the elevator (2 secs)
			phase 2: doors remaining opened (3 secs)
			phase 3: doors closing (2 secs)
			phase 4: doors are closed but the elevator is not moving (not timed)
			phase 5: the elevator is moving (4*4 = 16 secs)

		"phase" is an integer variable, that can take the values 1, 2, 3, 4 or 5 according to the current phase. For each phase, a counter is used in order to know the time spent in this phase. Once the expected time is spent (for example 3 seconds in phase 2), the phase value changes according to the expected behaviour. The elevator starts with its doors opened, at floor 0.

	1.2 Floor selection
		When a floor is selected (in the cabin or outside), a boolean variable (hold_X for floor X) is put to true. There is a variable for each floor. Once the floor is reached, this variable is put to false. This allows to select multiple floors simultaneously and prevents having to keep pushing the floor choice button.

	1.3 Button priority
		When two floors are selected, one of which lower than the current floor, the other higher, the elevator will move the same way as previously: if it was going up, then it will keep on going up, and respectively for going down. It seemed to be the way to code, since this is what elevators do in real life. (see bug section)

	1.4 Floor displaying
	The current floor displayed in the output "CURRENT FLOOR" corresponds to the current floor if the elevator is not moving, and the previous floor when the elevator is between two floors. This output is displayed  both inside and outside of the cabin. A light LIGHT_X also lights to indicate where the elevator is located.

_________________________
2. User manual of program

There are a lot of comments to help understand the behaviour of the program. Here is some additional information:

	2.1 Inputs
		-"SEC" is used 
		-"OPEN_DOOR" allows the user to open the doors when they are closed. It can only be used in phase 4.
		-The inputs "BUTTON0" to "BUTTON9" represent the buttons in the cabin, while the inputs "CALL_0" to -"CALL_9" represend the buttons located at the floors, outside the elevator.


	2.2 Outputs
		-The outputs "LIGHT_0" to "LIGHT_9" correspond to the CALL buttons.
		-"ARRET" indicates that the elevator is not moving.
		-"MONTE" indicates that the elevator is moving up.
		-"DESCEND" indicates that the elevator is moving down.
		-"OPENING" indicates that the elevator's door are opening.
		-"CLOSING" indicates that the elevator's door are closing.
		-"D_OPENED" indicates that the elevator's door are opened.
		-"D_CLOSED" indicates that the elevator's door are closed.
		-"ERROR" is used to treat special cases that are not supposed to happen, and should not come out.
		-"CALL_LIGHT", from what I understood is a light located at every floor. No matter at what floor, is lights when the elevator is moving (and only then). It is why there is only one output for this light
		-"CALLED_0" to "CALLED_9" are the lights present inside the cabin, that lights when the floor is selected.
		Note: the outputs that were not required in the subject were added by me in order to understand better the behaviour of the elevator since there is no graphical user interface to simulate the execution or the elevator. I know that they don't work perfectly, and should they be confusing, they are to be ignored.

	2.3 How to use the program
		I recommend using the "keep inputs" option, so one doesn't have to click on the "SEC" input everytime everytime s/he wants to take the system to the next step.
		It is important to note that there is only one "await" in the program, "await SEC". Counter values and other variables can be viewed usind Windows>Variables.

	2.4 Command lines
		Here are the four command lines (the first one is not always mandatory) used to compile and simulate the model. There is only one esterel module, and therefore one .strl file.
		esterel-env
		esterel -simul projet_reb.strl
		gcc -c -m32 projet_reb.c
		xes -Xcomp -m32 projet_reb.o

_____________
3. Known bug

	There is a bug that I couldn't fix, because I think that I would've needed to make a fundamental change in the program. When two floors are selected, one above the current floor and one under, the elevator "overshoots" the first floor, meaning that it stops at the first desired floor and keeps on going to the next floor, where it doesn't stop, before going in the opposite direction, to the second floor.
